

class Solution {
public:
    int helper(int indx, vector<int>&prices, int buy,vector<vector<int>> &dp){
        if(indx==prices.size()) return 0;
        int profit=0;
        if(dp[indx][buy]!=-1) return dp[indx][buy];
        
        if(buy){
            profit=max(-prices[indx]+helper(indx+1,prices,0,dp),helper(indx+1,prices,1,dp));
        }
        else{
            profit=max(prices[indx]+helper(indx+1,prices,1,dp),helper(indx+1,prices,0,dp));
        }
        return dp[indx][buy]=profit;
    }
    int maxProfit(vector<int>& prices) {
        vector<vector<int>>dp(prices.size(),vector<int>(2,-1));
        return helper(0,prices,1,dp);
    }
};
