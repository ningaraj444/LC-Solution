brute force --> calculate sum using all subarrays using 2 loops --> tc -->o(n*n) sc-->o(1)

tc--o(5n) (2+2+1)   sc -->o(4n)
class Solution {
    vector<int>prevsmalleleidx(vector<int>&arr){
        int n=arr.size();
        stack<int>st;
        vector<int>pse(n,-1);
        for(int i=0;i<n;i++){
            while(!st.empty() && arr[st.top()]>=arr[i]){
                  st.pop();
            }
            if(!st.empty()) pse[i]=st.top(); 
            st.push(i);
        }
        return pse;
    }

     vector<int>nextsmalleleidx(vector<int>&arr){
        int n=arr.size();
        stack<int>st;
        vector<int>nse(n,n);
        for(int i=0;i<n;i++){
            while(!st.empty() && arr[st.top()]>=arr[i]){
                nse[st.top()]=i;
                st.pop();
            }
            st.push(i);
        }
        return nse;
    }
public:
    int sumSubarrayMins(vector<int>& arr) {
        int mod=1e9+7;
        int n=arr.size();
       long long sum=0;
       vector<int> nse=nextsmalleleidx(arr);
        vector<int>pse=prevsmalleleidx(arr);
       for(int i=0;i<n;i++){
           int left = (pse[i] == -1) ? i + 1 : i - pse[i];
            int right = (nse[i] == n) ? n - i : nse[i] - i;
          sum = (sum + (long long)left * right * arr[i]) % mod;
       }
        return sum;
    }
};
