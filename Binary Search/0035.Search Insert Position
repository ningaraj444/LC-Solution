o(log n)

class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
       int lb=lower_bound(nums.begin(),nums.end(),target)-nums.begin();
       return lb;
    }
};

class Solution {
public:
    int searchInsert(vector<int>& nums, int target) {
        int n=nums.begin();
        int low=0,high=n-1;
       int lb=n;
       while(low<=high){
        int mid=low+(high-low)/2;
        if(nums[mid]>=target){
            lb=mid;
            high=mid-1;
        }
        else low=mid+1;
       }
       return lb;
    }
};
