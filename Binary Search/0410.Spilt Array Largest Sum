
class Solution {
public:
    bool possible(vector<int>&nums,int sum,int k){
        int n=nums.size();
        int subarraysum=0;
        int cnt=1;
        for(int i=0;i<n;i++){
            if(subarraysum+nums[i]>sum){
                cnt++;
                subarraysum=nums[i];
            }
            else subarraysum+=nums[i];
        }
        return cnt<=k;
    }
    int splitArray(vector<int>& nums, int k) {
        int n=nums.size();
        int low=*max_element(nums.begin(),nums.end());
        int high=accumulate(nums.begin(),nums.end(),0);
        while(low<=high){
            int mid=low+(high-low)/2;
            if(possible(nums,mid,k)) high=mid-1;
            else low=mid+1;;
        }
        return low;
    }
};
