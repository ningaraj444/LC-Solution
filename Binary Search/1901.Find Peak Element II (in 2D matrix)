
class Solution {
public:
    int Rowindex(vector<vector<int>>&mat,int col){
       int n=mat.size();
       int maxi=INT_MIN;
       int index=-1;
       for(int i=0;i<n;i++){
        if(mat[i][col]>maxi){
            maxi=mat[i][col];
            index=i;
        }
       }
       return index;
    }
    vector<int> findPeakGrid(vector<vector<int>>& mat) {
        int m=mat.size();
        int n=mat[0].size();
        int low=0,high=n-1;
        while(low<=high){
            int mid=low+(high-low)/2;
            int maxrowindx=Rowindex(mat,mid);
            int left=mid-1 >=0 ? mat[maxrowindx][mid-1]:-1;
            int right=mid+1 <n ? mat[maxrowindx][mid+1]:-1;
            if(mat[maxrowindx][mid]>left && mat[maxrowindx][mid]>right){
                return{maxrowindx,mid};
            }
            else if(mat[maxrowindx][mid]<left) high=mid-1;
            else low=mid+1;
        }
        return {-1,-1};
    }
};
