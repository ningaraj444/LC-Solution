class Solution {
public:
    bool dfs(vector<vector<char>>&board,string &word,int i,int j,int indx){
        if(indx==word.length()) return true;
        if(i<0 || j<0 || i>=board.size() || j>=board[0].size() || board[i][j]!=word[indx]) return false;
        
        char ch=board[i][j];
        board[i][j]='$';

        bool found=dfs(board,word,i+1,j,indx+1) ||
                   dfs(board,word,i-1,j,indx+1) || 
                   dfs(board,word,i,j+1,indx+1) || 
                   dfs(board,word,i,j-1,indx+1);
        board[i][j]=ch;
        return found;
    }
    bool exist(vector<vector<char>>& board, string word) {
        int rows=board.size();
        int col=board[0].size();

        for(int i=0;i<rows;i++){
            for(int j=0;j<col;j++){
                if(board[i][j]==word[0]){
                    if(dfs(board,word,i,j,0)) return true;
                }
            }
        }
        return false;
    }
};
