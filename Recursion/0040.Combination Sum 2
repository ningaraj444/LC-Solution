class Solution {
public:
    void backtrack(int indx,vector<int>&candidates,int target,vector<vector<int>>&res,vector<int>&curr){
        if(target==0){
            res.push_back(curr);
            return;
        }
        if(target<0) return;
        for(int i=indx;i<candidates.size();i++){
            if(i>indx && candidates[i]==candidates[i-1]) continue;
        curr.push_back(candidates[i]);
        backtrack(i+1,candidates,target-candidates[i],res,curr);
        curr.pop_back();
        }
    }
    vector<vector<int>> combinationSum2(vector<int>& candidates, int target) {
         vector<vector<int>>res;
        vector<int>curr;
        sort(candidates.begin(),candidates.end());
        backtrack(0,candidates,target,res,curr);
        return res;
    }
};
