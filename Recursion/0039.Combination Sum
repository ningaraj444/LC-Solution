class Solution {
public:
    void backtrack(int indx,vector<int>&candidates,int target,vector<vector<int>>&res,vector<int>&curr){
        if(target==0){
            res.push_back(curr);
            return;
        }
        if(target<0 || indx>=candidates.size()) return;
        curr.push_back(candidates[indx]);
        backtrack(indx,candidates,target-candidates[indx],res,curr);
        curr.pop_back();
        backtrack(indx+1,candidates,target,res,curr);
    }
    vector<vector<int>> combinationSum(vector<int>& candidates, int target) {
        vector<vector<int>>res;
        vector<int>curr;
        backtrack(0,candidates,target,res,curr);
        return res;
    }
};
