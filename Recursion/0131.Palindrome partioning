class Solution {
public:
    bool isPalindrome(string&s,int start,int end){
        while(start<=end){
            if(s[start++]!=s[end--]) return false;
        }
        return true;
    }
    void backtrack(string& s,vector<vector<string>>&res,vector<string>&curr,int indx){
        if(indx==s.size()){
            res.push_back(curr);
            return;
        }
        for(int i=indx;i<s.size();i++){
            if(isPalindrome(s,indx,i)){
               curr.push_back(s.substr(indx,i-indx+1));
               backtrack(s,res,curr,i+1);
               curr.pop_back();
            }
        }
    }
    vector<vector<string>> partition(string s) {
        vector<vector<string>>res;
        vector<string>curr;
        backtrack(s,res,curr,0);
        return res;
    }
};
