class Solution {
public:
     void backtrack(int indx,int k,int n,vector<vector<int>>&res,vector<int>&curr){
        if(n==0 && curr.size()==k){
            res.push_back(curr);
            return;
        }
        if(n<0 || curr.size()>k) return;
        for(int i=indx;i<10;i++){
        curr.push_back(i);
        backtrack(i+1,k,n-i,res,curr);
        curr.pop_back();
        }
    }

    vector<vector<int>> combinationSum3(int k, int n) {
        vector<vector<int>>res;
        vector<int>curr;
        backtrack(1,k,n,res,curr);
        return res;
    }
};
